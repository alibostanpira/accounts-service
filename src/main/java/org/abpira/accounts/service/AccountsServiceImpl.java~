package org.abpira.accounts.service;

import lombok.RequiredArgsConstructor;
import org.abpira.accounts.constants.AccountsConstants;
import org.abpira.accounts.dto.CustomerDTO;
import org.abpira.accounts.entities.Accounts;
import org.abpira.accounts.entities.Customer;
import org.abpira.accounts.exceptions.CustomerAlreadyExistsException;
import org.abpira.accounts.mapper.CustomerMapper;
import org.abpira.accounts.repository.AccountsRepository;
import org.abpira.accounts.repository.CustomerRepository;
import org.springframework.stereotype.Service;

import java.time.LocalDateTime;

@Service
@RequiredArgsConstructor
public class AccountsServiceImpl implements AccountsService {

    private final AccountsRepository accountsRepository;
    private final CustomerRepository customerRepository;

    @Override
    public void createAccount(CustomerDTO customerDTO) {
        Customer customer = CustomerMapper.mapToCustomer(customerDTO, new Customer());
        customerRepository.findByMobileNumber(customerDTO.getMobileNumber())
                .ifPresent(c -> {
                    throw new CustomerAlreadyExistsException("Customer already exists with mobile number " +
                            c.getMobileNumber());
                });
        customer.setCreatedAt(LocalDateTime.now());
        customer.setCreatedBy("Admin");
        //Customer savedCustomer = customerRepository.save(customer);
        //accountsRepository.save(createNewAccount(savedCustomer));
    }

    private Accounts createNewAccount(Customer customer) {
        Accounts newAccount = new Accounts();
        newAccount.setCustomerId(customer.getCustomerId());
        long randomAccountNumber = 1000000000L + (long) (Math.random() * 900000000);

        newAccount.setAccountNumber(randomAccountNumber);
        newAccount.setAccountType(AccountsConstants.SAVINGS);
        newAccount.setBranchAddress(AccountsConstants.ADDRESS);
        newAccount.setCreatedAt(LocalDateTime.now());
        newAccount.setCreatedBy("Admin");
        return newAccount;
    }
}
